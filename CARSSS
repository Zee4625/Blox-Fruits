--== PLAYER SETUP ==--
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

--== SERVICES ==--
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

--== SPEED SETTINGS ==--
local speedActive = false
local bodyVelocity
local currentSpeed = 0
local handBrakeActive = false
local groundOffset = 0.2

-- Trepte de viteza
local speedStages = {
    {speeds = {5,8,11,13,16,18,22,25,27,32,35,40,46,52,66,77,90,100, 120}, delay = 0.03},
    {speeds = {150, 170, 185, 190, 200, 230, 250, 260, 270, 285}, delay = 0.5},
    {speeds = {295, 300, 320, 320, 340, 360, 380, 420, 460, 480, 510}, delay = 0.72},
    {speeds = {525, 540, 555, 570}, delay = 1.5}
}

local stageIndex = 1
local gearIndex = 1

--== GUI SETUP ==--
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ZeeModsGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 180)
mainFrame.Position = UDim2.new(0, 100, 0, 100)
mainFrame.BackgroundColor3 = Color3.fromRGB(20,20,20)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Active = true
mainFrame.Draggable = true

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1,0,0,30)
titleBar.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1,0,1,0)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(255,255,255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.Text = "Zee MODS"
titleLabel.Parent = titleBar

-- Toggle Speed Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, -20, 0, 30)
toggleButton.Position = UDim2.new(0,10,0,40)
toggleButton.BackgroundColor3 = Color3.fromRGB(50,50,50)
toggleButton.TextColor3 = Color3.fromRGB(0,255,0)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 16
toggleButton.Text = "Speed OFF"
toggleButton.Parent = mainFrame

-- Handbrake Button
local handBrakeButton = Instance.new("TextButton")
handBrakeButton.Size = UDim2.new(1, -20, 0, 30)
handBrakeButton.Position = UDim2.new(0,10,0,75)
handBrakeButton.BackgroundColor3 = Color3.fromRGB(150,0,0)
handBrakeButton.TextColor3 = Color3.fromRGB(255,255,255)
handBrakeButton.Font = Enum.Font.SourceSansBold
handBrakeButton.TextSize = 16
handBrakeButton.Text = "Handbrake OFF"
handBrakeButton.Parent = mainFrame

-- Speed Display
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1,0,0,20)
speedLabel.Position = UDim2.new(0,0,0,140)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.fromRGB(0,255,0)
speedLabel.Font = Enum.Font.SourceSansBold
speedLabel.TextSize = 16
speedLabel.Text = "Speed: 0"
speedLabel.Parent = mainFrame

--== FUNCTIONS ==--
local function startSpeed()
    if not bodyVelocity then
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(9e9, 0, 9e9)
        bodyVelocity.Velocity = Vector3.new(0,0,0)
        bodyVelocity.Parent = humanoidRootPart
    end

    stageIndex = 1
    gearIndex = 1
    currentSpeed = speedStages[stageIndex].speeds[gearIndex]
    speedLabel.Text = "Speed: "..currentSpeed

    spawn(function()
        while speedActive do
            if handBrakeActive then
                currentSpeed = 0
            else
                gearIndex = gearIndex + 1
                local speeds = speedStages[stageIndex].speeds
                local delayTime = speedStages[stageIndex].delay
                if gearIndex > #speeds then
                    stageIndex = math.min(stageIndex + 1, #speedStages)
                    gearIndex = 1
                    speeds = speedStages[stageIndex].speeds
                    delayTime = speedStages[stageIndex].delay
                end
                currentSpeed = speeds[gearIndex]
            end
            speedLabel.Text = "Speed: "..currentSpeed
            wait(speedStages[stageIndex].delay)
        end
    end)
end

local function stopSpeed()
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
    currentSpeed = 0
    gearIndex = 1
    stageIndex = 1
    speedLabel.Text = "Speed: 0"
end

-- Toggle buttons
toggleButton.MouseButton1Click:Connect(function()
    speedActive = not speedActive
    toggleButton.Text = speedActive and "Speed ON" or "Speed OFF"
    if speedActive then
        startSpeed()
    else
        stopSpeed()
    end
end)

handBrakeButton.MouseButton1Click:Connect(function()
    handBrakeActive = not handBrakeActive
    handBrakeButton.Text = handBrakeActive and "Handbrake ON" or "Handbrake OFF"
end)

--== MOVEMENT LOOP ==--
RunService.Heartbeat:Connect(function()
    if speedActive and bodyVelocity then
        local dir = Vector3.new()
        -- W/S = viteza curenta
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then dir += humanoidRootPart.CFrame.LookVector * currentSpeed end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then dir -= humanoidRootPart.CFrame.LookVector * currentSpeed end
        -- A/D = lateral mic, 2-3
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then dir -= humanoidRootPart.CFrame.RightVector * 3 end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then dir += humanoidRootPart.CFrame.RightVector * 3 end

        if dir.Magnitude > 0 then
            bodyVelocity.Velocity = dir + Vector3.new(0,groundOffset,0)
        else
            bodyVelocity.Velocity = Vector3.new(0,groundOffset,0)
        end
    end
end)
