local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local REVIVE_SOUND_ID = "rbxassetid://18597544476"

local lastDeathCFrame = nil

-- Salvează poziția la moarte
local function onHumanoidDied(humanoid)
	if humanoid and humanoid.RootPart then
		lastDeathCFrame = humanoid.RootPart.CFrame
	elseif player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		lastDeathCFrame = player.Character.HumanoidRootPart.CFrame
	end
end

-- Sunet instant
local function playReviveSound()
	local sound = Instance.new("Sound")
	sound.SoundId = REVIVE_SOUND_ID
	sound.Volume = 4
	sound.Parent = workspace.CurrentCamera
	sound:Play()
	sound.Ended:Connect(function()
		sound:Destroy()
	end)
end

-- Efect glitch + scanlines + fade pe ecran
local function showGlitchEffect()
	local gui = player:WaitForChild("PlayerGui")

	-- Layer negru
	local blackFrame = Instance.new("Frame")
	blackFrame.Size = UDim2.new(1,0,1,0)
	blackFrame.BackgroundColor3 = Color3.new(0,0,0)
	blackFrame.BackgroundTransparency = 1
	blackFrame.ZIndex = 10
	blackFrame.Parent = gui

	-- Efect albastru
	local blueFrame = Instance.new("Frame")
	blueFrame.Size = UDim2.new(1,0,1,0)
	blueFrame.BackgroundColor3 = Color3.fromRGB(40, 120, 255)
	blueFrame.BackgroundTransparency = 1
	blueFrame.ZIndex = 11
	blueFrame.Parent = gui

	-- Scanlines
	local scan = Instance.new("ImageLabel")
	scan.Size = UDim2.new(1,0,1,0)
	scan.BackgroundTransparency = 1
	scan.Image = "rbxassetid://6066014630"
	scan.ImageTransparency = 0.6
	scan.ZIndex = 12
	scan.Parent = gui

	-- Noise
	local noise = Instance.new("ImageLabel")
	noise.Size = UDim2.new(1,0,1,0)
	noise.BackgroundTransparency = 1
	noise.Image = "rbxassetid://7532274665"
	noise.ImageTransparency = 0.7
	noise.ZIndex = 13
	noise.Parent = gui

	-- Blur
	local blur = Instance.new("BlurEffect")
	blur.Size = 0
	blur.Parent = Lighting

	-- Fade in rapid
	TweenService:Create(blackFrame, TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()
	TweenService:Create(blueFrame, TweenInfo.new(0.3), {BackgroundTransparency = 0.4}):Play()
	TweenService:Create(blur, TweenInfo.new(0.3), {Size = 12}):Play()

	-- Mic shake imagine
	local cam = workspace.CurrentCamera
	local startCF = cam.CFrame
	local elapsed = 0
	local conn
	conn = RunService.RenderStepped:Connect(function(dt)
		elapsed += dt
		if elapsed > 0.5 then
			conn:Disconnect()
			cam.CFrame = startCF
		else
			local offset = Vector3.new(
				(math.random() - 0.5) * 0.2,
				(math.random() - 0.5) * 0.2,
				0
			)
			cam.CFrame = startCF * CFrame.new(offset)
		end
	end)

	-- Fade out rapid
	task.delay(0.6, function()
		TweenService:Create(blackFrame, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
		TweenService:Create(blueFrame, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
		TweenService:Create(blur, TweenInfo.new(0.3), {Size = 0}):Play()
		task.delay(0.4, function()
			blackFrame:Destroy()
			blueFrame:Destroy()
			scan:Destroy()
			noise:Destroy()
			blur:Destroy()
		end)
	end)
end

-- Respawn instant
local function respawnAtLastDeath()
	if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and lastDeathCFrame then
		player.Character.HumanoidRootPart.CFrame = lastDeathCFrame
		local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.Health = humanoid.MaxHealth
		end

		playReviveSound()
		showGlitchEffect()
	end
end

local function onCharacterAdded(char)
	local humanoid = char:WaitForChild("Humanoid")
	humanoid.Died:Connect(function()
		onHumanoidDied(humanoid)
	end)
	respawnAtLastDeath()
end

player.CharacterAdded:Connect(onCharacterAdded)

if player.Character then
	onCharacterAdded(player.Character)
end
