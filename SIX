-- Alone x ZeeHUB - Mobile Friendly UI
-- Full single-file script (mobile-friendly GUI with tabs, big buttons, minimize/close)
-- Paste into a local script executed on the client (e.g. in StarterPlayerScripts) or run with an executor.

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer

-- Safety: ensure Character exists
local function getCharacter()
    return LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
end

-- States (shared with UI)
local state = {
    flightActive = false,
    moveSpeed = 275,
    xrayEnabled = false,
    fruitESPEnabled = false,
    wallhackEnabled = false,
    rangeMode = false,
    jumpBoost = false
}

-- Character refs (update when respawn)
local char = getCharacter()
local humanoid = char:WaitForChild("Humanoid")
local hrp = char:WaitForChild("HumanoidRootPart")

LocalPlayer.CharacterAdded:Connect(function(c)
    char = c
    humanoid = c:WaitForChild("Humanoid")
    hrp = c:WaitForChild("HumanoidRootPart")
end)

-- Core functionality (ported from your original script)
local function moveWithKeys()
    if not hrp then return end
    local direction = Vector3.new()
    if UserInputService:IsKeyDown(Enum.KeyCode.W) then direction += hrp.CFrame.LookVector end
    if UserInputService:IsKeyDown(Enum.KeyCode.S) then direction -= hrp.CFrame.LookVector end
    if UserInputService:IsKeyDown(Enum.KeyCode.A) then direction -= hrp.CFrame.RightVector end
    if UserInputService:IsKeyDown(Enum.KeyCode.D) then direction += hrp.CFrame.RightVector end
    hrp.Velocity = direction * state.moveSpeed
end

RunService.Heartbeat:Connect(function()
    if state.flightActive then
        moveWithKeys()
    end
end)

-- Wallhack (toggle CanCollide on local character parts)
local function setWallhack(val)
    state.wallhackEnabled = val
    local character = getCharacter()
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not val
        end
    end
end

-- Jump boost
local function setJumpBoost(val)
    state.jumpBoost = val
    if humanoid then
        humanoid.JumpPower = val and 200 or 50
    end
end

-- Range mode (increase hand/arm meshparts)
local initialSizes, initialTransparency = {}, {}
local function activateRange()
    local character = getCharacter()
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("MeshPart") then
            local lower = part.Name:lower()
            if lower:find("hand") or lower:find("arm") or lower:find("tool") then
                initialSizes[part] = part.Size
                initialTransparency[part] = part.Transparency
                part.Size = part.Size * 57.5
                part.Transparency = 1
            end
        end
    end
end
local function deactivateRange()
    for part, size in pairs(initialSizes) do
        if part and part.Parent then
            part.Size = size
            part.Transparency = initialTransparency[part] or 0
        end
    end
    initialSizes, initialTransparency = {}, {}
end
local function setRangeMode(val)
    state.rangeMode = val
    if val then activateRange() else deactivateRange() end
end

-- X-Ray ESP (Highlight players)
local function refreshHighlights()
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character then
            local ch = p.Character
            local h = ch:FindFirstChild("PlayerHighlight")
            if not h then
                h = Instance.new("Highlight")
                h.Name = "PlayerHighlight"
                h.Parent = ch
            end
            h.FillColor = Color3.fromRGB(255,0,0)
            h.OutlineColor = Color3.fromRGB(255,255,255)
            h.FillTransparency = 0.3
            h.OutlineTransparency = 0
        end
    end
end

local function clearHighlights()
    for _, p in pairs(Players:GetPlayers()) do
        local ch = p.Character
        if ch then
            local h = ch:FindFirstChild("PlayerHighlight")
            if h then h:Destroy() end
        end
    end
end

local xrayLoop
local function setXRay(val)
    state.xrayEnabled = val
    if val then
        refreshHighlights()
        if xrayLoop then xrayLoop:Disconnect() end
        xrayLoop = RunService.Heartbeat:Connect(function()
            -- lightweight refresher (only when enabled)
            -- ensure highlights stay active if characters respawn
            refreshHighlights()
        end)
    else
        if xrayLoop then xrayLoop:Disconnect(); xrayLoop = nil end
        clearHighlights()
    end
end

-- Fruit ESP: Billboard labels on Models named "Fruit"
local fruitESPObjects = {}
local function activateFruitESP()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name == "Fruit" and not obj:FindFirstChild("FruitBillboard") then
            local gui = Instance.new("BillboardGui")
            gui.Name = "FruitBillboard"
            gui.Size = UDim2.new(0, 120, 0, 40)
            gui.AlwaysOnTop = true
            gui.StudsOffset = Vector3.new(0, 3, 0)
            gui.Parent = obj

            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1,0,1,0)
            label.BackgroundTransparency = 1
            label.Text = "Fruit"
            label.TextScaled = true
            label.Font = Enum.Font.SourceSansBold
            label.TextColor3 = Color3.fromRGB(0,255,0)
            label.Parent = gui

            table.insert(fruitESPObjects, gui)
        end
    end
end
local function deactivateFruitESP()
    for _, gui in pairs(fruitESPObjects) do
        if gui and gui.Parent then gui:Destroy() end
    end
    fruitESPObjects = {}
end
local function setFruitESP(val)
    state.fruitESPEnabled = val
    if val then activateFruitESP() else deactivateFruitESP() end
end

-- Teleport function
local function teleportTo(position)
    local char = getCharacter()
    local hr = char:FindFirstChild("HumanoidRootPart")
    if not hr then return end

    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e9,1e9,1e9)
    bv.Velocity = Vector3.new(0,0,0)
    bv.Parent = hr

    local bg = Instance.new("BodyGyro")
    bg.MaxTorque = Vector3.new(1e9,1e9,1e9)
    bg.CFrame = CFrame.new(hr.Position, position)
    bg.Parent = hr

    task.spawn(function()
        repeat
            if not hr or not hr.Parent then break end
            local dir = (position - hr.Position)
            if dir.Magnitude == 0 then break end
            dir = dir.Unit
            bv.Velocity = dir * 250
            bg.CFrame = CFrame.new(hr.Position, position)
            task.wait(0.1)
        until (hr.Position - position).Magnitude < 5
        if bv and bv.Parent then bv:Destroy() end
        if bg and bg.Parent then bg:Destroy() end
    end)
end

local teleportPoints = {
    {Title = "Mansion", Position = Vector3.new(-12549, 337.21, -7467.69)},
    {Title = "Hydra Island", Position = Vector3.new(5293.42, 1005.40, 397.52)},
    {Title = "Haunted Castle", Position = Vector3.new(-9521.26, 142.15, 5535.68)},
    {Title = "Castle on the Sea", Position = Vector3.new(-5081.23, 314.29, -3151.90)},
    {Title = "Third Sea Spawn", Position = Vector3.new(-12548.84, 337.21, -7467.69)},
    {Title = "Sea of Treats", Position = Vector3.new(-20698.23, 283.45, -10333.15)},
    {Title = "Great Tree", Position = Vector3.new(2278.61, 25.89, -6726.67)},
    {Title = "Floating Turtle", Position = Vector3.new(-10551.46, 365.76, -8501.72)},
    {Title = "Port Town", Position = Vector3.new(-289.44, 44.83, 5357.12)},
    {Title = "Forgotten Island", Position = Vector3.new(-3057.96, 238.29, -10172.34)}
}

-- Collab Games callbacks (safe simple loader wrappers)
local function loadRemote(url)
    local ok, res = pcall(function()
        return game:HttpGetAsync(url, true)
    end)
    if ok and res and res ~= "" then
        local f, e = loadstring(res)
        if f then
            pcall(f)
        else
            warn("Failed to compile remote script:", e)
        end
    else
        warn("Failed to fetch remote script from:", url)
    end
end

local collabGames = {
    {Title = "Hunty Zombies", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/ZMBO"},
    {Title = "BlueLock Rivals", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/BBQ"},
    {Title = "Grow A Garden", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/GRO"},
    {Title = "JJK", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/JJK-X"},
    {Title = "MM2", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/M2FS"},
    {Title = "99 Nights", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/99FOR"},
    {Title = "Wierd Gun Game", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/WGUN"},
    {Title = "Blox Fruits", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/Xz0"},
    {Title = "Driving Empire", Url = "https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/CARSSS"}
}

-- UI CREATION: Mobile-friendly layout
local function createUI()
    -- cleanup old GUI if present
    local old = CoreGui:FindFirstChild("AloneZeeHubGUI")
    if old then old:Destroy() end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AloneZeeHubGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = CoreGui

    -- Background blur + container
    local background = Instance.new("Frame")
    background.Name = "Background"
    background.AnchorPoint = Vector2.new(0.5,0.5)
    background.Position = UDim2.new(0.5,0,0.5,0)
    background.Size = UDim2.new(0.9,0,0.9,0)
    background.BackgroundTransparency = 0
    background.BackgroundColor3 = Color3.fromRGB(15,22,30)
    background.BorderSizePixel = 0
    background.Parent = screenGui

    local rounded = Instance.new("UICorner", background)
    rounded.CornerRadius = UDim.new(0,18)

    -- Top bar (title + controls)
    local topBar = Instance.new("Frame")
    topBar.Name = "TopBar"
    topBar.Size = UDim2.new(1,0,0,60)
    topBar.Position = UDim2.new(0,0,0,0)
    topBar.BackgroundTransparency = 1
    topBar.Parent = background

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(0.6,0,1,0)
    title.Position = UDim2.new(0.02,0,0,0)
    title.BackgroundTransparency = 1
    title.Text = "Alone x ZeeHUB - Mobile"
    title.TextSize = 20
    title.Font = Enum.Font.GothamBold
    title.TextColor3 = Color3.fromRGB(225,225,225)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = topBar

    -- Control buttons container (minimize/close)
    local ctrlBox = Instance.new("Frame")
    ctrlBox.Name = "Controls"
    ctrlBox.Size = UDim2.new(0.34,0,1,0)
    ctrlBox.Position = UDim2.new(0.64,0,0,0)
    ctrlBox.BackgroundTransparency = 1
    ctrlBox.Parent = topBar

    local function makeCtrlButton(name, txt)
        local b = Instance.new("TextButton")
        b.Name = name
        b.Text = txt
        b.Size = UDim2.new(0,80,0,36)
        b.AnchorPoint = Vector2.new(1,0.5)
        b.Position = UDim2.new(1,-10,0.5,0)
        b.BackgroundColor3 = Color3.fromRGB(30,38,48)
        b.TextColor3 = Color3.fromRGB(230,230,230)
        b.Font = Enum.Font.GothamBold
        b.TextSize = 16
        b.AutoButtonColor = true
        b.Parent = ctrlBox
        local corner = Instance.new("UICorner", b)
        corner.CornerRadius = UDim.new(0,10)
        return b
    end

    local closeBtn = makeCtrlButton("CloseBtn","Close")
    closeBtn.Position = UDim2.new(1,-10,0.5,0)
    local minimizeBtn = makeCtrlButton("MinBtn","Min")
    minimizeBtn.Position = UDim2.new(1,-100,0.5,0)

    -- Left column: big tab icons (vertical for mobile thumb reach)
    local leftColumn = Instance.new("Frame")
    leftColumn.Name = "LeftCol"
    leftColumn.Size = UDim2.new(0,120,1,-80)
    leftColumn.Position = UDim2.new(0,10,0,70)
    leftColumn.BackgroundTransparency = 1
    leftColumn.Parent = background

    local leftLayout = Instance.new("UIListLayout", leftColumn)
    leftLayout.SortOrder = Enum.SortOrder.LayoutOrder
    leftLayout.Padding = UDim.new(0,12)

    -- Content area
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "Content"
    contentFrame.Size = UDim2.new(1,-140,1,-80)
    contentFrame.Position = UDim2.new(0,130,0,70)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = background

    -- Pages container (one frame per tab)
    local pages = Instance.new("Folder")
    pages.Name = "Pages"
    pages.Parent = contentFrame

    -- Utility: simple page creation helper
    local function createPage(name)
        local p = Instance.new("ScrollingFrame")
        p.Name = name
        p.Size = UDim2.new(1,0,1,0)
        p.CanvasSize = UDim2.new(0,0,0,0)
        p.ScrollBarThickness = 10
        p.ScrollBarImageTransparency = 0.6
        p.BackgroundTransparency = 1
        p.Parent = pages

        local layout = Instance.new("UIListLayout", p)
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Padding = UDim.new(0,10)

        local contentPadding = Instance.new("UIPadding", p)
        contentPadding.PaddingTop = UDim.new(0,6)
        contentPadding.PaddingBottom = UDim.new(0,16)

        return p
    end

    -- Create pages for Main, Movement, Utility, Teleport, ESP, Games
    local pageMain = createPage("MainPage")
    local pageMovement = createPage("MovementPage")
    local pageUtility = createPage("UtilityPage")
    local pageTeleport = createPage("TeleportPage")
    local pageESP = createPage("ESPPage")
    local pageGames = createPage("GamesPage")

    -- Small helper to update canvas size based on children
    local function updateCanvas(sf)
        local layout = sf:FindFirstChildOfClass("UIListLayout")
        if not layout then return end
        sf.CanvasSize = UDim2.new(0,0,0, layout.AbsoluteContentSize.Y + 12)
    end

    -- Create left buttons for tabs
    local tabsList = {
        {Name = "Main", Page = pageMain},
        {Name = "Movement", Page = pageMovement},
        {Name = "Utility", Page = pageUtility},
        {Name = "Teleport", Page = pageTeleport},
        {Name = "ESP", Page = pageESP},
        {Name = "Games", Page = pageGames}
    }

    local activePage = pageMain
    local function setActivePage(p)
        activePage = p
        for _, pg in pairs(pages:GetChildren()) do
            pg.Visible = (pg == p)
        end
    end

    for i, t in ipairs(tabsList) do
        local b = Instance.new("TextButton")
        b.Name = t.Name .. "Tab"
        b.Size = UDim2.new(1,0,0,56)
        b.BackgroundColor3 = Color3.fromRGB(24,32,40)
        b.Text = t.Name
        b.Font = Enum.Font.GothamBold
        b.TextSize = 18
        b.TextColor3 = Color3.fromRGB(235,235,235)
        b.Parent = leftColumn
        local c = Instance.new("UICorner", b)
        c.CornerRadius = UDim.new(0,12)
        b.MouseButton1Click:Connect(function()
            setActivePage(t.Page)
        end)
    end

    -- Controls behavior: minimize / close
    local minimized = false
    minimizeBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            local tween = TweenService:Create(background, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {Size = UDim2.new(0.4,0,0.06,0)})
            tween:Play()
            -- hide child frames
            for _, v in pairs(background:GetChildren()) do
                if v ~= topBar then v.Visible = false end
            end
        else
            local tween = TweenService:Create(background, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {Size = UDim2.new(0.9,0,0.9,0)})
            tween:Play()
            for _, v in pairs(background:GetChildren()) do v.Visible = true end
        end
    end)

    closeBtn.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)

    -- UI element helper: big toggle button
    local function makeToggle(labelText, default)
        local holder = Instance.new("Frame")
        holder.Size = UDim2.new(1, -12, 0, 72)
        holder.BackgroundTransparency = 1

        local lbl = Instance.new("TextLabel")
        lbl.Size = UDim2.new(0.6,0,1,0)
        lbl.BackgroundTransparency = 1
        lbl.Text = labelText
        lbl.Font = Enum.Font.GothamBold
        lbl.TextSize = 18
        lbl.TextColor3 = Color3.fromRGB(230,230,230)
        lbl.TextXAlignment = Enum.TextXAlignment.Left
        lbl.Parent = holder

        local toggle = Instance.new("TextButton")
        toggle.Size = UDim2.new(0,120,0,44)
        toggle.Position = UDim2.new(1,-130,0.5,-22)
        toggle.AnchorPoint = Vector2.new(0,0)
        toggle.BackgroundColor3 = default and Color3.fromRGB(60,160,140) or Color3.fromRGB(60,60,60)
        toggle.Text = default and "ON" or "OFF"
        toggle.Font = Enum.Font.GothamBold
        toggle.TextSize = 16
        toggle.TextColor3 = Color3.fromRGB(240,240,240)
        toggle.Parent = holder
        local corner = Instance.new("UICorner", toggle)
        corner.CornerRadius = UDim.new(0,12)

        return holder, toggle
    end

    -- UI element helper: big button
    local function makeBigButton(text)
        local b = Instance.new("TextButton")
        b.Size = UDim2.new(1, -12, 0, 64)
        b.BackgroundColor3 = Color3.fromRGB(40,48,56)
        b.Font = Enum.Font.GothamBold
        b.TextSize = 18
        b.TextColor3 = Color3.fromRGB(240,240,240)
        b.Text = text
        local corner = Instance.new("UICorner", b)
        corner.CornerRadius = UDim.new(0,12)
        return b
    end

    -- Fill Main Page
    do
        local header = makeBigButton("Welcome to Alone x ZeeHUB Mobile")
        header.TextSize = 16
        header.BackgroundColor3 = Color3.fromRGB(28,40,52)
        header.Parent = pageMain

        local note = Instance.new("TextLabel")
        note.Size = UDim2.new(1, -12, 0, 56)
        note.BackgroundTransparency = 1
        note.Text = "Use the left tabs to switch sections. Buttons are large for touch devices." 
        note.TextWrapped = true
        note.Font = Enum.Font.Gotham
        note.TextSize = 15
        note.TextColor3 = Color3.fromRGB(190,190,190)
        note.Parent = pageMain

        updateCanvas(pageMain)
    end

    -- Movement Page: SpeedMode (flight), Wallhack, JumpBoost
    do
        local t1, toggle1 = makeToggle("Speed Mode (Fly - WSAD)", state.flightActive)
        t1.Parent = pageMovement
        toggle1.MouseButton1Click:Connect(function()
            state.flightActive = not state.flightActive
            toggle1.BackgroundColor3 = state.flightActive and Color3.fromRGB(60,160,140) or Color3.fromRGB(60,60,60)
            toggle1.Text = state.flightActive and "ON" or "OFF"
        end)

        local t2, toggle2 = makeToggle("Wallhack (No collision)", state.wallhackEnabled)
        t2.Parent = pageMovement
        toggle2.MouseButton1Click:Connect(function()
            local val = not state.wallhackEnabled
            setWallhack(val)
            toggle2.BackgroundColor3 = val and Color3.fromRGB(60,160,140) or Color3.fromRGB(60,60,60)
            toggle2.Text = val and "ON" or "OFF"
        end)

        local t3, toggle3 = makeToggle("Jump Boost", state.jumpBoost)
        t3.Parent = pageMovement
        toggle3.MouseButton1Click:Connect(function()
            local val = not state.jumpBoost
            setJumpBoost(val)
            toggle3.BackgroundColor3 = val and Color3.fromRGB(60,160,140) or Color3.fromRGB(60,60,60)
            toggle3.Text = val and "ON" or "OFF"
        end)

        updateCanvas(pageMovement)
    end

    -- Utility Page: Range Mode
    do
        local t1, toggle1 = makeToggle("Range Mode (Enlarge arms)", state.rangeMode)
        t1.Parent = pageUtility
        toggle1.MouseButton1Click:Connect(function()
            local val = not state.rangeMode
            setRangeMode(val)
            toggle1.BackgroundColor3 = val and Color3.fromRGB(60,160,140) or Color3.fromRGB(60,60,60)
            toggle1.Text = val and "ON" or "OFF"
        end)

        updateCanvas(pageUtility)
    end

    -- ESP Page: X-Ray & Fruit ESP
    do
        local t1, toggle1 = makeToggle("X-Ray (Highlight players)", state.xrayEnabled)
        t1.Parent = pageESP
        toggle1.MouseButton1Click:Connect(function()
            local val = not state.xrayEnabled
            setXRay(val)
            toggle1.BackgroundColor3 = val and Color3.fromRGB(60,160,140) or Color3.fromRGB(60,60,60)
            toggle1.Text = val and "ON" or "OFF"
        end)

        local t2, toggle2 = makeToggle("Fruit ESP (Label fruits)", state.fruitESPEnabled)
        t2.Parent = pageESP
        toggle2.MouseButton1Click:Connect(function()
            local val = not state.fruitESPEnabled
            setFruitESP(val)
            toggle2.BackgroundColor3 = val and Color3.fromRGB(60,160,140) or Color3.fromRGB(60,60,60)
            toggle2.Text = val and "ON" or "OFF"
        end)

        updateCanvas(pageESP)
    end

    -- Teleport Page: create a big list of teleport buttons
    do
        for _, pt in ipairs(teleportPoints) do
            local b = makeBigButton("Teleport: " .. pt.Title)
            b.Parent = pageTeleport
            b.MouseButton1Click:Connect(function()
                teleportTo(pt.Position)
            end)
        end
        updateCanvas(pageTeleport)
    end

    -- Games Page: Collab games buttons
    do
        for _, g in ipairs(collabGames) do
            local b = makeBigButton("Run: " .. g.Title)
            b.Parent = pageGames
            b.MouseButton1Click:Connect(function()
                loadRemote(g.Url)
            end)
        end
        updateCanvas(pageGames)
    end

    -- Default: show main
    setActivePage(pageMain)

    -- Mobile friendly: allow dragging the topbar to reposition (optional)
    local dragging = false
    local dragStart
    topBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
        end
    end)
    topBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            dragStart = nil
        end
    end)
    screenGui.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.Touch then
            -- do a small move (kept simple; full repositioning can break since it's centered)
            local delta = input.Position - dragStart
            -- subtle nudge effect using tween
            TweenService:Create(background, TweenInfo.new(0.12, Enum.EasingStyle.Quad), {Position = UDim2.new(0.5, delta.X/10, 0.5, delta.Y/10)}):Play()
        end
    end)

    -- Adjust sizes for small screens: simple responsiveness
    local function onResize()
        local view = workspace.CurrentCamera and workspace.CurrentCamera.ViewportSize or Vector2.new(1280,720)
        if view.X < 600 then
            background.Size = UDim2.new(0.96,0,0.96,0)
            leftColumn.Size = UDim2.new(0,100,1,-80)
        else
            background.Size = UDim2.new(0.9,0,0.9,0)
            leftColumn.Size = UDim2.new(0,120,1,-80)
        end
    end
    onResize()

    return screenGui
end

-- Create the UI at runtime
local gui = createUI()

-- Final: notify user in-game (if desired) using a very small in-gui toast
local function smallNotify(text)
    local scr = CoreGui:FindFirstChild("AloneZeeHubGUI")
    if not scr then return end
    local bg = scr:FindFirstChild("Background")
    if not bg then return end
    local toast = Instance.new("TextLabel", bg)
    toast.Size = UDim2.new(0.4,0,0,36)
    toast.Position = UDim2.new(0.3,0,0.02,0)
    toast.BackgroundTransparency = 0.2
    toast.BackgroundColor3 = Color3.fromRGB(30,40,50)
    toast.Text = text
    toast.TextColor3 = Color3.fromRGB(235,235,235)
    toast.TextSize = 14
    toast.Font = Enum.Font.GothamBold
    toast.TextScaled = false
    local corner = Instance.new("UICorner", toast)
    corner.CornerRadius = UDim.new(0,8)
    task.delay(6, function()
        if toast and toast.Parent then pcall(function() toast:Destroy() end) end
    end)
end

smallNotify("Alone x ZeeHUB Mobile UI Loaded")

-- END OF SCRIPT
