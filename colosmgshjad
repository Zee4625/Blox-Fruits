local AcrylicLibrary = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Zee4625/Blox-Fruits/refs/heads/main/Zee", true))()
local TextEffect = AcrylicLibrary.TextEffect

AcrylicLibrary.Theme:HightGreen()

local Window = AcrylicLibrary:CreateWindow({
    Title = TextEffect:AddColor("ZeeHUB - v7", Color3.fromRGB(0, 255, 0)),
    Logo = "rbxassetid://82858721461099",
    Keybind = Enum.KeyCode.LeftControl,
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local moveSpeed = 39
local flightActive = false
local wallhackEnabled = false
local xrayEnabled = false
local fruitESPEnabled = false

-- Initialize tables to store original sizes and transparencies
local initialSizes = {}
local initialTransparency = {}

local function toggleNoClip(state)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not state
        end
    end
end

local function moveWithKeys()
    local direction = Vector3.new(0, 0, 0)
    local userInput = game:GetService("UserInputService")

    if userInput:IsKeyDown(Enum.KeyCode.W) then
        direction = direction + humanoidRootPart.CFrame.LookVector
    end
    if userInput:IsKeyDown(Enum.KeyCode.S) then
        direction = direction - humanoidRootPart.CFrame.LookVector
    end
    if userInput:IsKeyDown(Enum.KeyCode.A) then
        direction = direction - humanoidRootPart.CFrame.RightVector
    end
    if userInput:IsKeyDown(Enum.KeyCode.D) then
        direction = direction + humanoidRootPart.CFrame.RightVector
    end

    humanoidRootPart.Velocity = direction * moveSpeed
end

local function activateJump()
    if humanoid then
        humanoid.JumpPower = 200  -- Set to a fixed value to avoid excessive scaling
    end
end

local function toggleWallHack()
    wallhackEnabled = not wallhackEnabled
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = not wallhackEnabled
        end
    end
end

-- X-ray function that reloads every 4 seconds
local function activateXRay()
    local function highlightPlayers()
        for _, playerInstance in pairs(game.Players:GetPlayers()) do
            if playerInstance ~= player then
                local character = playerInstance.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    -- Highlight player
                    local highlight = character:FindFirstChild("PlayerHighlight")
                    if not highlight then
                        highlight = Instance.new("Highlight")
                        highlight.Name = "PlayerHighlight"
                        highlight.FillColor = Color3.fromRGB(255, 255, 255)
                        highlight.FillTransparency = 0.3
                        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        highlight.OutlineTransparency = 0
                        highlight.Parent = character
                    end

                    -- Creating a label for the player's name
                    local nameLabel = character:FindFirstChild("NameLabel")
                    if not nameLabel then
                        nameLabel = Instance.new("BillboardGui")
                        nameLabel.Name = "NameLabel"
                        nameLabel.Size = UDim2.new(0, 100, 0, 30)
                        nameLabel.StudsOffset = Vector3.new(0, 3, 0)
                        nameLabel.AlwaysOnTop = true
                        nameLabel.Parent = character

                        -- Text for the player's name
                        local textLabel = Instance.new("TextLabel")
                        textLabel.Size = UDim2.new(1, 0, 1, 0)
                        textLabel.Position = UDim2.new(0, 0, 0, 0)
                        textLabel.BackgroundTransparency = 1
                        textLabel.Text = playerInstance.Name
                        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                        textLabel.Font = Enum.Font.SourceSansBold
                        textLabel.TextSize = 14
                        textLabel.TextScaled = true
                        textLabel.Parent = nameLabel
                    end
                end
            end
        end
    end

    -- Run the highlighting process initially
    highlightPlayers()

    -- Reload every 4 seconds
    while xrayEnabled do
        wait(4)  -- Wait for 4 seconds before reloading the highlights
        for _, playerInstance in pairs(game.Players:GetPlayers()) do
            local character = playerInstance.Character
            if character then
                -- Remove previous highlight and name labels
                local highlight = character:FindFirstChild("PlayerHighlight")
                if highlight then
                    highlight:Destroy()
                end
                local nameLabel = character:FindFirstChild("NameLabel")
                if nameLabel then
                    nameLabel:Destroy()
                end
            end
        end
        -- Reload X-ray after clearing
        highlightPlayers()
    end
end

local fruitESPEnabled = false
local fruitESPObjects = {}  -- Salvează referințele la obiectele ESP pentru a le șterge când se dezactivează.

local function activateFruitESP()
    -- Asigură-te că activăm ESP doar dacă nu este deja activat.
    if fruitESPEnabled then
        -- Crează ESP pentru fiecare fruct în lumea jocului
        for _, fruit in pairs(game.Workspace:GetDescendants()) do
            if fruit:IsA("Model") and fruit.Name == "Fruit" then
                -- Verifică dacă fructul are deja un ESP (BillboardGui).
                if not fruit:FindFirstChild("FruitBillboard") then
                    -- Crează un BillboardGui pentru ESP
                    local fruitBillboard = Instance.new("BillboardGui")
                    fruitBillboard.Name = "FruitBillboard"
                    fruitBillboard.Size = UDim2.new(0, 100, 0, 30)
                    fruitBillboard.StudsOffset = Vector3.new(0, 3, 0)
                    fruitBillboard.AlwaysOnTop = true
                    fruitBillboard.Parent = fruit
                    
                    -- TextLabel pentru fruct
                    local textLabel = Instance.new("TextLabel")
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.Position = UDim2.new(0, 0, 0, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.Text = "Fruit"
                    textLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                    textLabel.Font = Enum.Font.SourceSansBold
                    textLabel.TextSize = 12
                    textLabel.TextScaled = true
                    textLabel.Parent = fruitBillboard

                    -- TextLabel pentru distanță
                    local distanceLabel = Instance.new("TextLabel")
                    distanceLabel.Size = UDim2.new(1, 0, 1, 0)
                    distanceLabel.Position = UDim2.new(0, 0, 0, 20)
                    distanceLabel.BackgroundTransparency = 1
                    distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    distanceLabel.Font = Enum.Font.SourceSans
                    distanceLabel.TextSize = 13
                    distanceLabel.TextScaled = true
                    distanceLabel.Parent = fruitBillboard

                    -- Adaugă obiectele de ESP la tabelul global pentru a le putea șterge la dezactivare
                    table.insert(fruitESPObjects, fruitBillboard)

                    -- Actualizează distanța în timp real
                    spawn(function()
                        while fruit.Parent do
                            local distance = (player.Character.HumanoidRootPart.Position - fruit.Position).Magnitude
                            distanceLabel.Text = string.format("Distance: %.2f", distance)
                            wait(1)
                        end
                    end)
                end
            end
        end
    end
end

-- Functia care opreste Fruit ESP-ul si sterge obiectele create
local function deactivateFruitESP()
    -- Șterge toate obiectele de ESP create
    for _, fruitBillboard in pairs(fruitESPObjects) do
        if fruitBillboard and fruitBillboard.Parent then
            fruitBillboard:Destroy()
        end
    end

    -- Resetează lista de obiecte ESP
    fruitESPObjects = {}
end



-- Function to activate Range (increase hand and object size)
local function activateRange()
    -- Save the initial sizes and transparency of hands and tools
    for _, hand in pairs(character:GetChildren()) do
        if hand:IsA("MeshPart") and (hand.Name:lower():find("hand") or hand.Name:lower():find("arm")) then
            initialSizes[hand] = hand.Size
            initialTransparency[hand] = hand.Transparency
            hand.Size = hand.Size * 57.5
            hand.Transparency = 1
        end
    end

    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Tool") then
            initialSizes[item] = item.Size
            initialTransparency[item] = item.Transparency
            item.Size = item.Size * 57.5
            item.Transparency = 1
        end
    end

    -- Stabilize the character
    local bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(100000, 100000, 100000)
    bodyGyro.CFrame = humanoidRootPart.CFrame
    bodyGyro.Parent = humanoidRootPart
end

-- Function to deactivate Range (reset hand and object size)
local function deactivateRange()
    -- Remove stabilizer
    if humanoidRootPart:FindFirstChildOfClass("BodyGyro") then
        humanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
    end

    -- Restore original sizes and transparency
    for _, hand in pairs(character:GetChildren()) do
        if hand:IsA("MeshPart") and (hand.Name:lower():find("hand") or hand.Name:lower():find("arm")) then
            if initialSizes[hand] then
                hand.Size = initialSizes[hand]
                hand.Transparency = initialTransparency[hand]
                initialSizes[hand] = nil
                initialTransparency[hand] = nil
            end
        end
    end

    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Tool") then
            if initialSizes[item] then
                item.Size = initialSizes[item]
                item.Transparency = initialTransparency[item]
                initialSizes[item] = nil ---12549, 337.21, -7467.69
                initialTransparency[item] = nil
            end
        end
    end
end
-- old

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Viteza de zbor
local flightSpeed = 301
local flightActive = false
local farmActive = false

-- Funcție pentru a găsi toate cuferele
local function findAllChests()
    local chests = {}
    -- Căutăm în Workspace toate părțile care au în nume "chest"
    for _, obj in pairs(game.Workspace:GetDescendants()) do
        if obj:IsA("Part") and obj.Name:lower():find("chest") then
            table.insert(chests, obj.Position)
        end
    end
    return chests
end

-- Funcție de activare/oprire NoClip
local function toggleNoClip(state)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not state
        end
    end
end

-- Funcție de zbor spre o destinație
local function flyToPosition(targetPosition)
    if flightActive then return end
    flightActive = true

    -- Creează BodyVelocity pentru controlul vitezei de zbor
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = humanoidRootPart

    -- Creează BodyGyro pentru stabilizare
    local bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
    bodyGyro.CFrame = humanoidRootPart.CFrame
    bodyGyro.Parent = humanoidRootPart

    -- NoClip activat
    local noclipLoop = true
    task.spawn(function()
        while noclipLoop do
            toggleNoClip(true)
            task.wait(0.1)
        end
    end)

    -- Mers lin spre destinație
    while (humanoidRootPart.Position - targetPosition).Magnitude > 5 do
        local direction = (targetPosition - humanoidRootPart.Position).unit
        bodyVelocity.Velocity = direction * flightSpeed
        task.wait(0.1)
    end

    -- Oprire lină
    for i = 1, 22 do
        bodyVelocity.Velocity = bodyVelocity.Velocity * 0.5
        task.wait(0.1)
    end

    -- Oprire completă
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    task.wait(0.5)
    bodyVelocity:Destroy()
    bodyGyro:Destroy()

    noclipLoop = false
    toggleNoClip(false)

    flightActive = false
end

-- Funcție pentru a merge la toate cuferele în buclă continuă
local function flyThroughAllChests()
    if farmActive then  -- Oprește farm-ul dacă este deja activ
        farmActive = false
        print("Farm de cufere oprit!")
        return
    end

    farmActive = true
    print("Farm de cufere activat!")

    while farmActive do
        local chests = findAllChests()
        if #chests == 0 then
            print("Nu s-au găsit cufere!")
        end
        for _, chestPosition in ipairs(chests) do
            if not farmActive then break end  -- Oprește farm-ul dacă butonul este apăsat din nou
            print("Merg spre cufăr la poziția: " .. tostring(chestPosition))
            flyToPosition(chestPosition)
            task.wait(0.2)  -- Așteaptă puțin între zboruri
        end
        task.wait(0.4)  -- Pauză între runde de farmare
    end
end

--ne
-- Add the tabs and functionality in the UI
local TabMovement = Window:AddTab({Title = "HOME", Icon = "home"})

TabMovement:AddToggle({
    Title = "Speed Mode",
    Tip = "Activate Speed Movement",
    Default = false,
    Callback = function(value)
        flightActive = value
    end,
})

TabMovement:AddToggle({
    Title = "Jump Boost",
    Tip = "Enable High Jump",
    Default = false,
    Callback = function(value)
        if value then
            activateJump()
        else
            humanoid.JumpPower = 50  -- Reset to default
        end
    end,
})

TabMovement:AddToggle({
    Title = "Wallhack",
    Tip = "Pass through walls",
    Default = false,
    Callback = function(value)
        toggleWallHack()
    end,
})

TabMovement:AddButton({
    Title = "Rejoin",
    Tip = "Click to rejoin the game",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId)
    end,
})

game:GetService("RunService").Heartbeat:Connect(function()
    if flightActive then
        moveWithKeys()
    end
end)
-- mo 12345678

--mo 
-- Tab ESP for X-ray and Fruit ESP
local TabESP = Window:AddTab({Title = "ESP", Icon = "eye"})

TabESP:AddToggle({
    Title = "X-ray",
    Tip = "Highlight Players",
    Default = false,
    Callback = function(value)
        xrayEnabled = value
        if xrayEnabled then activateXRay() end
    end,
})


local function GetOnlinePlayers()
    -- Funcție care returnează o listă cu toți jucătorii online
    local players = {}  
    for _, player in pairs(game.Players:GetPlayers()) do
        table.insert(players, player.Name)
    end
    return players
end

local Dropdown

local function UpdateDropdown()
    if Dropdown then
        Dropdown:SetValues(GetOnlinePlayers())
    end
end

Dropdown = TabESP:AddDropdown({
    Title = "Spy",
    Values = GetOnlinePlayers(),
    Default = "",
    Multi = false,
    MaxMulti = 1,
    Callback = function(value)
        local targetPlayer = game.Players:FindFirstChild(value)
        if targetPlayer then
            -- Cod pentru a schimba perspectiva la jucătorul selectat
            game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character:FindFirstChild("Humanoid")
        end
    end,
})

-- Actualizare lista de jucători la fiecare secundă
task.spawn(function()
    while true do
        UpdateDropdown()
        task.wait(1)
    end
end)


local Tabinfo = Window:AddTab({Title = "INFO", Icon = "Zee"})

Tabinfo:AddParagraph({
	Title = "Info",
	Description = AcrylicLibrary:HightlightSource([[
Hi, this hub is still under development!
Don't forget to join our discord server!

server:
https://discord.gg/ecKrSHRZa6
]])
})

Window:Notify({
	Title = "⚠️⚠️⚠️Inportant⚠️⚠️⚠️",
	Description = "This is still a beta! Join the discord for more info! THIS IS FOR ANY GAME BUT IS THE BETA!!",
	Duration = 12,
})
